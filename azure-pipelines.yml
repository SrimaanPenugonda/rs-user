# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include: ["*"] #triggers with all changes in branch
  tags:
    include: ["*"] # triggers with all changes and tagged them

pool: Default  #self hosted pool

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'env'
  displayName: Env Command #this task helps to check the BUILD parameters

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      cd /opt
      curl -O https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.1.2450-linux.zip
      unzip sonar-scanner-cli-4.5.0.2216-linux.zip 
      rm -rf sonar
      mv sonar-scanner-4.5.0.2216-linux sonar 
      ln -sf /opt/sonar/bin/sonar-scanner /bin/sonar-scanner 
      curl -s https://raw.githubusercontent.com/linuxautomations/labautomation/master/tools/sonar-scanner/sonar-quality-gate.sh >/bin/sonar-quality-gate.sh
      chmod +x /bin/sonar-quality-gate.sh
  displayName: 'Setup Sonar Scanner'

- script: |
    sonar-scanner -Dsonar.projectKey=user -Dsonar.sources=. -Dsonar.host.url=http://3.236.121.125:9000 -Dsonar.login=373459d9f9ecbd13ca3d907f9ec6f6816b544652 
    export SONAR_SCANNER_OPTS="-Xmx512m"
  displayName: 'Run Sonar Scan'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      sudo yum install nodejs make gcc-c++ -y
      mkdir $(Build.SourcesDirectory)/publish
      npm install --unsafe-perm
      cp -r node_modules server.js $(Build.SourcesDirectory)/publish
  displayName: Prepare Artifacts

- task: UniversalPackages@0
  condition: contains(variables['Build.SourceBranch'],'tags') #this condition helps to publish artifacts only when
  inputs: #publish user artifactory                     #tags , Build.SourceBranch
     command: 'publish'
     publishDirectory: '$(Build.SourcesDirectory)/publish'  # here download only publish directory
     feedsToUsePublish: 'internal'
     vstsFeedPublish: '736b4ce8-9eaf-495c-9983-ed63d9930834'
     vstsFeedPackagePublish: 'rsuser'
     versionOption: 'custom'
     versionPublish: '$(Build.SourceBranchName)' #Artifact version will be picked from git tag
  displayName: Publish Artficats
